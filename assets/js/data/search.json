[ { "title": "Test", "url": "/posts/test/", "categories": "", "tags": "", "date": "2022-12-12 00:00:00 +0800", "snippet": "just test#this is the test,use the github repo for picgo." }, { "title": "Cordova", "url": "/posts/cordova/", "categories": "", "tags": "", "date": "2022-03-31 00:00:00 +0800", "snippet": "前记受到开源工程Thunder Scope的启示，他使用了electron作为用户程序界面，进而在知乎找到了一份关于界面开发的讨论：https://www.zhihu.com/question/264999651个人总结就是：WPF适合目前Win桌面开发，嵌入式用Qt，Web前端就是Html5+JS。而electron可以应对一些基础的应用，一般编译出来的程序体积较大及效率较低，主要面向前端开发者，深入定制对开发者要求较高。（我自己一直也这么认为的，所以一看到‘Thunder Scope’使用，我非常惊讶。但他代表了一种趋势，记得大概8年前我第一次接触Qt，发现这玩意编译出来的程序体积及内存占用远比我最初用的MFC高，当时就果断放弃了继续使用，一直用MFC，导致我做的界面总是好像上个世纪的产品，并且开发效率极低。而Qt这么多年的改进，明显感觉效率几经很高了，而且还是跨平台方案。只要该技术还在持续更新，那我觉得这些弊端是会得到改善的，只是现阶段我的评价还是暂时难堪大任。）并没有发现桌面、Web、APP一体化的方案，实际上三种面对的终端界面存在一些差异，手机屏幕及操作方式和电脑是有些区别的。都需要做相应适配。其实，我想寻找的是一种可以快速高效开发界面应用的环境，并且希望可以部署到不同平台。因为在现实的环境中我们确实需要一些简单的UI界面去帮助我们处理日常的工作，同时并不希望为此付出太多的时间。前段时间用excel做了一个界面：（如果不是逼上梁山，你是不会想到去用excel做自动化界面的，虽然功能捡漏，但却实现效率较高，类似的界面用MFC是不可想象的）目前还是首选Qt和Html5(WebGL 与 canvas2D)；Java不太会，一直走的是C/C++路线。关于WebGL新安装的Qt7多了一个webassembly技术，web应用真是大行其道。无论是那种技术，只是实现方式不同，对于程序本身而言核心都是一致的，只要达到目的就行。我们知道electron可以将web转为桌面应用，那么这次接触到一个新的技术：CORDOVACORDOVA以下是Cordova的编译android的测试流程：其间也是道路坎坷Cordova:可以将wed应用编译为安卓或IOS应用本机环境win10 64 x86cordova -v 11.0.0需要安装node.js:NPM 使用介绍:NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题#npm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如npm install express # 本地安装npm install express -g # 全局安装#npm install -g cordova / cnpm install -g cordova npm install -g cordova --registry=https://registry.npm.taobao.org#cnpm install -g cordova@8.1.2 // 安装指定版本#新建一个 cordova 应用cordova create learn-cordovacordova platform add android --save#cordova platform add ios --savecordova platform add browser --savecd learn-cordovacordova platformcordova run browserJDK:已安装Android SDK手动安装Android Studio:注意SDK Manager路径如下：Could not find an installed version of Gradle either in Android Studio环境变量设置cd learn-cordovaset ANDROID_SDK_ROOT=C:\\Users\\will\\AppData\\Local\\Android\\Sdkset PATH=%PATH%;C:\\Users\\will\\AppData\\Local\\Android\\Sdk\\platform-toolsset PATH=%PATH%;C:\\Users\\will\\.gradle\\wrapper\\dists\\gradle-7.1.1-all\\1wqbeia0d49252rmlcr6o8lbl\\gradle-7.1.1\\bincordova run android软件只会提示指定’ANDROID_SDK_ROOT’变量的路径，另外两个也需要添加。一开始提示gradle找不到，手动下载了一个，但实际Android Studio安装的时候一般默认已经安装了对应的版本，路径在’C:\\Users\\will.gradle&#39;，只要将环境变量设置上即可。本身安装Android Studio是没有tools路径的，由于自己安装了Qt7，在Qt7环境配置安卓kit时也需要指定SDK路径，Qt7会在SDK目录产生一个tools的路径。kotlin-compiler-embeddablekotlin-compiler-embeddable-1.5.21.jar提示‘Can not Get ‘http….’’ 尽管使用了代理，但仍然很慢，下载失败。该文件需要手动下载去覆盖到对应的目录”C:\\Users\\will.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-compiler-embeddable\\1.5.21\\b7d083256154ce255baa44547e3156505e18d29a”kotlin compiler embeddable下载慢No installed build tools found. Install the Android build tools version 30.0.3 or higher.No installed build tools found. Install the Android build tools version 30.0Script ‘G:\\prjs\\web\\cordova\\learn-cordova\\platforms\\android\\CordovaLib\\cordova.gradle’ line: 69直接找到上面的文件以及对应行，手动指定了一个版本值，一定是你当前版本值加一。关于这个问题官方的论坛：https://github.com/apache/cordova-android/issues/1391找不到dx.bat和dx.jar这里我是手动将相应目录原来名字叫d8.bat/d8.jar直接改成了dx.bat/dx.jar。就是死马当活马医，没想到改过来之后竟然可以。至此环境就配置ok了，那我们找个html5的应用试下：将找到的html5应用拷到www文件夹下，将原来的删除或覆盖，重新执行：cd learn-cordovacordova run androidEND真是夸张，Sdk竟然耗费了我10个G空间，gradle耗费1.4G(后面还有增加的可能)，C盘已经快满了。又是不务正业的一篇。" }, { "title": "Bash", "url": "/posts/bash/", "categories": "", "tags": "", "date": "2022-01-07 00:00:00 +0800", "snippet": "merge for (( i=1 ; i&amp;lt;21 ; i++ )) ; do cat ./js_sb${i}.txt &amp;gt;&amp;gt; ./js_gt${i}.txt; cat ./js_gt${i}.txt | sed &#39;/^$/d&#39; &amp;gt; ./js_mcio${i}.txt; done" }, { "title": "Axi", "url": "/posts/axi/", "categories": "", "tags": "", "date": "2021-12-24 00:00:00 +0800", "snippet": "1，axi width convert比如32数据位宽转512数据位宽，那么在32位宽端对0，4，8的写操作将变为在512位宽端对地址0的strb写操作。（strb信号用来指示512bit即64字节在哪些位置的byte是有效的）逻辑上理解可以无缝转换。但实际对于4/8等地址的操作是无效的，只能0/64/128/…32位宽端的busrt操作会被转化为512端的64bit strb全f操作" }, { "title": "Time WH!", "url": "/posts/Time-WH/", "categories": "Animal, Insect", "tags": "bee", "date": "2021-11-20 13:23:41 +0800", "snippet": "layout: posttitle: “Time WH!”date: 2021-11-21 00:23:41 -0500categories: jekyll update—You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.Jekyll requires blog post files to be named according to the following format:YEAR-MONTH-DAY-title.MARKUPWhere YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.Jekyll also offers powerful support for code snippets:def print_hi(name) puts &quot;Hi, #{name}&quot;endprint_hi(&#39;Tom&#39;)#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk." } ]
